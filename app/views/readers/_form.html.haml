- with_error_report(@reader.errors.on(:name)) do
  = f.label :name, 'Your name', :class => 'required'
  %span.formnote as you would like it to appear
  %br
  = f.text_field :name, :class => 'standard'

- if Radiant::Config['reader.use_honorifics?']
  - with_error_report(@reader.errors.on(:honorific)) do
    = f.label :honorific, 'Title or rank', :class => 'optional'
    %span.formnote as you would like us to display it when you are credited
    %br
    = f.text_field :honorific, :class => 'standard'

- if @reader.new_record? && @email_field

  - with_error_report(@reader.errors.on(:email)) do
    = f.label @email_field, 'Your email address', :class => 'required'
    %span.formnote this has to work
    %br
    = text_field_tag @email_field, params[@email_field] || @reader.email, :id => "reader_#{@email_field}", :class => 'standard'

  .innocuous
    - with_error_report(@reader.errors.on(:trap)) do
      %label{ :for => 'reader_email', :class => 'required' }
        Don't fill this in!
      %span.formnote
        it's a spam trap and you weren't supposed to see it
      %br
      = text_field_tag 'reader_email', '', :name => 'reader[email]', :class => 'standard'

- else

  - with_error_report(@reader.errors.on(:email)) do
    = f.label :email, 'Your email address', :class => 'required'
    %br
    = f.text_field :email, :class => 'standard'

- if Radiant::Config['reader.enable_profiles?'] 
  - with_error_report(@reader.errors.on(:description)) do
    = f.label :description, 'A little about yourself', :class => 'optional'
    %span.formnote 
      you can fill this in later. 
      Textile formatting 
      is allowed.
    %br
    = f.text_area :description, :class => 'standard', :rows => 8

- unless Radiant::Config['reader.email_login?'] 
  - with_error_report(@reader.errors.on(:login)) do
    = f.label :login, 'Login username', :class => 'optional'
    %span.formnote leave blank to use your email address
    %br
    = f.text_field :login, :class => 'standard'

- with_error_report(@reader.errors.on(:password)) do
  - label = @reader.new_record? ? 'Password' : 'Change password?'
  - cssclass = @reader.new_record? ? 'required' : 'optional'
  - help = @reader.new_record? ? 'at least four characters, please' : 'leave blank to keep present password. If changing, at least four characters.'
  
  = f.label :password, label, :class => cssclass
  %span.formnote
    = help
    %br
  = f.password_field :password, :class => 'standard', :autocomplete => 'off'

- with_error_report(@reader.errors.on(:password_confirmation)) do
  = f.label :password_confirmation, "Confirm #{'new ' unless @reader.new_record?}password", :class => @reader.new_record? ? 'required' : 'optional'
  - unless @reader.new_record?
    %span.formnote
      leave blank to keep present password
      %br
  = f.password_field :password_confirmation, :class => 'standard', :autocomplete => 'off'

- @form_partials.each do |partial|
  = render :partial => partial
